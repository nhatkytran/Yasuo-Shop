openapi: 3.0.3
info:
  title: Yasuo API - Yasup Shop
  description: |-
    This API provides programmatic access to a vast collection of merchandise related to the popular game League of Legends.
    Integrate this API into your application to offer users a convenient way to browse, search, and potentially purchase officially licensed League of Legends merchandise.

  contact:
    email: nhockkutean2@gmail.com
  version: 1.0.0
externalDocs:
  description: Source code - Github
  url: https://github.com/nhatkytran/Yasuo-Shop

servers:
  - url: http://127.0.0.1:1337
  - url: https://yasuo-api-serverless.netlify.app

tags:
  - name: Information
    description: Check server is live and some information about API

  - name: Metadata
    description: |
      Serverless - Metadata for UI

      **https://yasuo-api-serverless.netlify.app**
    externalDocs:
      description: Netlify Functions
      url: https://www.netlify.com/platform/core/functions/

  - name: Products
    description: League of Legends merchandise

paths:
  # Information ##########

  /:
    get:
      tags:
        - Information
      summary: Get API information
      description: |
        Returns a JSON response with a status and a message providing information about the API creator.
      operationId: /
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/SuccessMessage'
                  message:
                    type: string
                    description: The message containing information about the API creator.
                    example: 'This API is created by Trần Nhật Kỳ. Contact: nhockkutean2@gmail.com'

  /language:
    get:
      tags:
        - Information
      summary: Get current language
      description: |
        Returns the current language setting (This API is created to support 2 languages ['en-us', 'fr'] for now).
        There a midlleware to control language, language can be changed using query:
        **?language=en-us** | **?language=fr**
      operationId: language
      parameters:
        - $ref: '#/components/parameters/LanguageQuery'
      responses:
        '200':
          description: Successful response with the current language
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/SuccessMessage'
                  language:
                    type: string
                    description: The current language setting.
                    example: en-us
        '400':
          $ref: '#/components/responses/LanguageNotSupported'

  # Metadata ##########

  /api/v1/slides:
    get:
      tags:
        - Metadata
      summary: Get all slides
      description: Returns a list of slides with detailed information.
      operationId: getAllSlides
      parameters:
        - $ref: '#/components/parameters/LanguageQuery'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: The unique identifier for the slide.
                    example: rec9jVapZERCuknP6
                  name:
                    type: string
                    description: The name of the slide.
                    example: Secretlab x VALORANT
                  image:
                    type: string
                    format: uri
                    example: 'https://v5.airtableusercontent.com/v3/u/29/29/1715760000000/uBxV5D2kiHZy4dxCGCRdog/koTBcedmUK-BsGgXTaXfYYEQf7zgs04hFk9_vjz49KE34tI6zm0tyLCV27tmd3PgKzWmKSJxxP8jgIs0ZbrGo1vU_K8VPrSiw7ZODoOTu2sBsVPeceregZJwtzIDJ5z-GHYcwn3RgzbIcl8iTfWVth4k0rTDgoK-87NNu16PQpQ/KWg_vo7IO8sPvxmrWBdIz0l70EdRplWkvNCi54hzJZQ'
        '400':
          $ref: '#/components/responses/LanguageNotSupported'

  /api/v1/banners:
    get:
      tags:
        - Metadata
      summary: Get all banners or a single banner
      description: Returns a list of banners with detailed information.
      operationId: getAllBanners
      parameters:
        - $ref: '#/components/parameters/LanguageQuery'
        - $ref: '#/components/parameters/ServerlessIDQuery'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/SuccessMessage'
                  banners:
                    type: array
                    description: A list of banners.
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The unique identifier for the banner.
                          example: recO9dmWhqEJPUi9e
                        name:
                          type: string
                          description: The name of the banner.
                          example: Ruination Collectors Edition
                        description:
                          type: string
                          description: The description of the banner.
                          example: Meet the new Secretlab Memory Foam Lumbar Pillow Poro Party Edition. Fluffy, adorable, and soft as snow - get yours now!
                        image:
                          type: string
                          format: uri
                          example: 'https://v5.airtableusercontent.com/v3/u/29/29/1715760000000/4c9DEZftrf1S4PnmWutCZw/w0goBsvisnN0CCtmQShuF76MnIW3mCiCnvblNEbqaRutV-EWkj-iExS59rQOczQ42-9k_uzyn5vPLUJsNOSSvJAAHhFFC9_Ton8b0berrrlPIATZbmF0NyFiZl8jwDLan_vfGpbuWC38_6_Ri5OyBKykeQHznvDkxdtBUkh-eM8/gtiUr1t5_rYfKk9u3qxMguMZK4e8t-JiEO7gL8B7Kf8'
        '400':
          $ref: '#/components/responses/LanguageNotSupported'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/promos:
    get:
      tags:
        - Metadata
      summary: Get all promos or a single promo
      description: Returns a list of promos with detailed information.
      operationId: getAllPromos
      parameters:
        - $ref: '#/components/parameters/ServerlessIDQuery'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/SuccessMessage'
                  promos:
                    type: array
                    description: A list of promos.
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The unique identifier for the promo.
                          example: rechbp4YPWOtG8ZhU
                        category:
                          type: string
                          description: The category of the promo.
                          example: featured
                        collection:
                          type: string
                          description: The collection of the promo (Not all promo have 'collection' property).
                          example: msi
                        image:
                          type: string
                          format: uri
                          example: 'https://v5.airtableusercontent.com/v3/u/29/29/1715760000000/VfAW5o0ouafshZjK9KTUbw/CpRBOaiKhlzTZZNee0kNKnpn-TsSkhLNHQdCt2kK4L9nNmJu0iXaE8yjCZuIjLe7Hy460i-o0emQ7fhMk1ODOKdumkpdZqHeQ2447RdQa1aeZ9_TZoIhm0rifV1WGCyw-utSkMRJGNg-NaoVvgFgCcRdpFFXvO_SzF7re5iw44c/AL-qH-ISk-sjcTvPaPvKFUhpvQuFKxy3zR0-NyyKGmI'
        '404':
          $ref: '#/components/responses/NotFound'

  # Products ##########

  /api/v1/products:
    get:
      tags:
        - Products
      summary: Get all products
      description: Returns a list of products with detailed information.
      operationId: getAllProducts
      parameters:
        - $ref: '#/components/parameters/LanguageQuery'
        - $ref: '#/components/parameters/AdvancedFilteringQuery'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/SuccessMessage'
                  language:
                    $ref: '#/components/schemas/Language'
                  numResults:
                    $ref: '#/components/schemas/NumResults'
                  products:
                    type: array
                    description: A list of products.
                    items:
                      $ref: '#/components/schemas/Product'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/v1/products/{productID}:
    get:
      tags:
        - Products
      summary: Get product by ID
      description: Returns detailed information about a specific product by its ID.
      operationId: getProduct
      parameters:
        - $ref: '#/components/parameters/LanguageQuery'
        - $ref: '#/components/parameters/ProjectQuery'
        - $ref: '#/components/parameters/ProductIDParam'
      responses:
        '200':
          description: Successful response with product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/SuccessMessage'
                  language:
                    $ref: '#/components/schemas/Language'
                  numResults:
                    $ref: '#/components/schemas/NumResults'
                  products:
                    $ref: '#/components/schemas/Product'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/v1/products/top-5-cheap:
    get:
      tags:
        - Products
      summary: Get the top 5 cheap products
      description: Returns a list of the top 5 cheapest products available.
      operationId: top5Cheap
      parameters:
        - $ref: '#/components/parameters/LanguageQuery'
        - in: query
          name: additions
          description: |
            Advanced filtering, sorting, projecting, pagination.

            Filtering: { "name": "Jimei Palace Aatrox 1/6 Scale Statue" }

            Projecting: { "fields": "name,price" }
          required: false
          schema:
            type: object
            additionalProperties: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/SuccessMessage'
                  language:
                    $ref: '#/components/schemas/Language'
                  numResults:
                    $ref: '#/components/schemas/NumResults'
                  products:
                    type: array
                    description: A list of products.
                    items:
                      $ref: '#/components/schemas/Product'
        '500':
          $ref: '#/components/responses/ServerError'

# Add Technologies description

components:
  schemas:
    SuccessMessage:
      type: string
      description: The status of the response.
      example: success

    FailMessage:
      type: string
      description: The status of the response.
      example: fail

    ErrorMessage:
      type: string
      description: The status of the response.
      example: error

    Language:
      type: string
      description: The language of the response.
      example: en-us

    NumResults:
      type: integer
      description: The number of entities returned.
      example: 1

    Product:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier for the product.
          example: 663e30b7947d905b5b60311b
        name:
          type: string
          description: The name of the product.
          example: Jimei Palace Aatrox 1/6 Scale Statue
        price:
          type: object
          properties:
            default:
              type: number
              format: float
              description: The default price of the product.
              example: 489.99
            saleAmount:
              type: number
              format: float
              description: The sale amount for the product.
              example: 0
            currency:
              type: string
              description: The currency of the price.
              example: USD
        ratingsAverage:
          type: number
          format: float
          description: The average rating of the product.
          example: 0
        ratingsQuantity:
          type: integer
          description: The number of ratings for the product.
          example: 0
        editions:
          type: object
          properties:
            en:
              type: array
              description: Editions in English.
              items:
                type: string
                example: limited edition
            other:
              type: array
              description: Editions in other languages.
              items:
                type: string
                example: ÉDITION LIMITÉE,
        images:
          type: array
          items:
            type: string
            format: uri
            example: https://images.contentstack.io/v3/assets/blt5bbf09732528de36/bltf457399168c2b817/659873e5dc766225e97ebf22/CPX_JIMEIAatrox_Ecomm_1.png
        type:
          type: string
          description: The type of product.
          example: figure
        category:
          type: string
          description: The category of the product.
          example: featured
        optional:
          type: object
          description: Metadata about product like give away,...
          properties:
            title:
              type: string
            image:
              type: string
              format: uri
        sizes:
          type: array
          description: The sizes of product like T-Shirt.
          items:
            type: string
            example: XS
        platforms:
          type: array
          description: Product like codes of a game that have indication of supported platforms.
          items:
            type: string
            example: Switch
        regions:
          type: array
          description: Regions where products are only available.
          items:
            type: string
            example: North America
        check:
          type: string
          description: Terms of Service that user has to follow
          example: I understand the game code is non-refundable and non-exchangeable. The game region and platform I need are selected.
        warning:
          type: string
          description: The warning associated with the product.
          example: This product is a collector's item intended for ages 14+.
        shippingDays:
          type: integer
          description: The number of days required for shipping.
          example: 7
        quote:
          type: string
          description: A notable quote related to the product.
          example: Now, hear the silence of annihilation.
        descriptions:
          type: array
          description: Maybe some stories that are related to the product.
          items:
            type: string
            example: Once a mighty Shuriman champion remade as an Ascended, Aatrox helped halt the onslaught of the Void during the Icathian rebellion. However, in time, with no monarch or existential threat to defend against, Aatrox and the other Sunborn began to clash in a war for the ruins of the world.
        features:
          type: array
          description: The features of the product.
          items:
            type: string
            example: LED sword, eyes, and wings lighting effect.
        approximateDimensions:
          type: object
          description: The approximate dimensions of the product.
          properties:
            value:
              type: array
              items:
                type: array
                items:
                  type: number
                  format: float
                  example: 18.1
            en:
              type: array
              description: In Enlish.
              items:
                type: string
                example: height
            other:
              type: array
              description: In other languages.
              items:
                type: string
                example: hauteur
        funFact:
          type: string
          description: A fun fact about the product.
          example: Made in partnership with our friends at Jimei Palace.
        series:
          type: string
          description: The series of the product.
          example: 'Blood Moon Aatrox Figure is number #05 in Series 4.'
        materials:
          type: array
          description: The materials of the product.
          items:
            type: string
            example: Zinc Alloy Masks
        createdAt:
          type: string
          format: date-time
          description: The date and time when the product was created.
          example: 2024-05-10T14:35:35.535Z
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the product was last updated.
          example: 2024-05-10T14:35:35.535Z

  parameters:
    LanguageQuery:
      in: query
      name: language
      description: The language (**en-us** | **fr**) of entities to return. **en-us** is the default value.
      required: false
      schema:
        type: string

    ServerlessIDQuery:
      in: query
      name: id
      description: The ID of entitity to return.
      required: false
      schema:
        type: string

    AdvancedFilteringQuery:
      in: query
      name: additions
      description: |
        Advanced filtering, sorting, projecting, pagination.

        Filtering: { "name": "Jimei Palace Aatrox 1/6 Scale Statue" }

        Sorting: { "sort": "price.default" }

        Projecting: { "fields": "name,price" }

        Pagination: { "page": 1, "limit": 3 }
      required: false
      schema:
        type: object
        additionalProperties: true

    ProjectQuery:
      in: query
      name: fields
      description: Project the fields of entity (filed="name").
      required: false
      schema:
        type: string

    ProductIDParam:
      in: path
      name: productID
      description: The unique identifier of the product.
      required: true
      schema:
        type: string

  responses:
    LanguageNotSupported:
      description: Bad request - Language is not supported!
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: '#/components/schemas/FailMessage'
              message:
                type: string
                description: The error message explaining why the request failed.
                example: Language 'language' is not supported!

    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: '#/components/schemas/FailMessage'
              message:
                type: string
                description: The error message explaining that the entity was not found.
                example: Entity not found!

    ServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: '#/components/schemas/ErrorMessage'
              message:
                type: string
                example: Something went wrong!
